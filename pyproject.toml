[project]
name = "kornia"
description = "Open Source Differentiable Computer Vision Library for PyTorch"
keywords = [
  "computer vision",
  "deep learning",
  "pytorch",
]
license = {text = "Apache-2.0"}
authors = [{name = "Edgar Riba", email = "edgar@kornia.org"}]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Environment :: GPU",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Software Development :: Libraries",
]
dynamic = [
  "dependencies",
  "optional-dependencies",
  "readme",
  "version",
]
[project.urls]
  "Bug Tracker" = "https://github.com/kornia/kornia/issues"
  Documentation = "https://kornia.readthedocs.io/en/latest"
  Download = "https://github.com/kornia/kornia"
  Homepage = "https://www.kornia.org"
  "Source Code" = "https://github.com/kornia/kornia"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=61.2",
]

[tool.setuptools]
  zip-safe = true
  license-files = ["LICENSE"]
  include-package-data = false

  [tool.setuptools.dynamic]
    dependencies = {file = ["requirements/requirements.txt"]}
    version = {attr = "kornia.__version__"}
    readme = {file = ["README.md"], content-type = "text/markdown"}

  [tool.setuptools.dynamic.optional-dependencies]
    dev = {file = "requirements/requirements-dev.txt"}
    docs = {file = ["requirements/requirements-docs.txt"]}
    x = {file = ["requirements/requirements-x.txt"]}

  [tool.setuptools.packages.find]
    exclude = ["docs*", "test*", "examples*"]
    namespaces = false

  [tool.setuptools.package-data]
    kornia = ["py.typed"]

[tool.black]
  line-length = 120
  skip-string-normalization = true
  skip-magic-trailing-comma = true

[tool.ruff]
  line-length = 120
  target-version = "py37"
  select = ["C9", "E", "F", "I", "PL", "S", "UP", "W", "YTT", "BLE", "C4", "RUF"]
  ignore = [
    "PLW2901", # Allow overwritten values on loops
  ]

  [tool.ruff.isort]
    known-first-party = ["examples", "kornia", "test"]

  [tool.ruff.mccabe]
    max-complexity = 40

  [tool.ruff.pylint]
    max-args = 20
    max-branches = 32
    max-returns = 16
    max-statements = 124
    allow-magic-value-types = ["str", "bytes", "int", "float"]

  [tool.ruff.per-file-ignores]
    "*/__init__.py" = ["F401", "F403"] # Allow unused imports and star imports
    "kornia/__init__.py" = ["I001"] # Allow unsorted imports
    "test/*" = ["S101", "S311", "BLE", "RUF012"] # allow assert, random, ignore BLE, mutable class attr
    "docs/*" = ["S101", "PLR0912", "PLR0915"] # allow assert, ignore max branches and statements

[tool.pytest.ini_options]
  addopts = "--color=yes"
  testpaths = ["test"]
  markers =[
    "jit: mark a test as torchscript test",
    "grad: mark a test as gradcheck test",
    "nn: mark a test as module test"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "raise",
  "if 0:",
  "if __name__ == .__main__.:",
]

[tool.mypy]
  files = ["kornia/"]
  pretty = true
  check_untyped_defs = true
  disallow_any_generics = true
  disallow_incomplete_defs = true
  show_error_codes = true
  ignore_missing_imports = true
  no_implicit_optional = true
  warn_unused_ignores = true
  warn_redundant_casts = true

[tool.distutils.bdist_wheel]
  universal = true

[tool.pydocstyle]
  match = '.*\.py'
  ignore = ['D105','D107','D203','D204','D213','D406','D407']
