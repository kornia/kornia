on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '["3.7"]'
      pytorch-version:
        required: false
        type: string
        default: '["1.9.1"]'
      os:
        required: false
        type: string
        default: ubuntu-latest
      pytorch-dtype:
        required: false
        type: string
        default: 'float32'
      continue-on-error:
        required: false
        type: boolean
        default: false
      fail-fast:
        required: false
        type: boolean
        default: false

jobs:
  tests:
    name: python-${{ matrix.python-version }}, torch-${{ matrix.pytorch-version }}
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        python-version: ${{ fromJSON(inputs.python-version) }}
        pytorch-version: ${{ fromJSON(inputs.pytorch-version) }}
        exclude:
          - pytorch-version: '1.9.1'
            python-version: '3.10'
          - pytorch-version: '1.10.2'
            python-version: '3.10'

    steps:
    - name: Checkout kornia
      uses: actions/checkout@v3
    - name: Setting environment on ${{ inputs.os }} with python ${{ matrix.python-version }} and pytorch ${{ matrix.pytorch-version }}
      uses: ./.github/actions/env
      with:
        python-version: ${{ matrix.python-version }}
        pytorch-version: ${{ matrix.pytorch-version }}

    - name: Run CPU tests ${{ inputs.pytorch-dtype }}
      continue-on-error: ${{ inputs.continue-on-error }}
      shell: bash -l {0}
      run: pytest -v --device cpu --dtype ${{ inputs.pytorch-dtype }} --cov=kornia --cov-report xml ./test


    - if: always()
      name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }} # to not depend on build via GH API
        flags: cpu,${{ inputs.os }}_py-${{ matrix.python-version }}_pt-${{ matrix.pytorch-version }}_${{ inputs.pytorch-dtype }}
        name: cpu-coverage
