on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '["3.10"]'
      os:
        required: false
        type: string
        default: ubuntu-latest
      backend:
        required: false
        type: string
        default: '["torch"]'
      backend-version:
        required: false
        type: string
        default: '["2.0.1"]'
      backend-dtype:
        required: false
        type: string
        default: 'float32'
      pytest-extra:
        required: false
        type: string
        default: ''
      continue-on-error:
        required: false
        type: boolean
        default: false
      fail-fast:
        required: false
        type: boolean
        default: false

jobs:
  tests:
    name: python-${{ matrix.python-version }}, ${{ matrix.backend }}-${{ matrix.backend-version }}
    runs-on: ${{ inputs.os }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        python-version: ${{ fromJSON(inputs.python-version) }}
        backend-version: ${{ fromJSON(inputs.backend-version) }}
        backend: ${{ fromJSON(inputs.backend) }}
        exclude:
          - backend: 'torch'
            backend-version: '1.9.1'
            python-version: '3.10'
          - backend: 'torch'
            backend-version: '1.10.2'
            python-version: '3.10'
          - backend: 'numpy'
            backend-version: '1.25.0'
            python-version: '3.8'
          - backend: 'numpy'
            backend-version: '1.26.0'
            python-version: '3.8'
          - backend: 'jax'
            backend-version: '0.4.14'
            python-version: '3.8'

    steps:
    - name: Checkout kornia
      uses: actions/checkout@v3

    - name: Setting environment on ${{ inputs.os }} with python ${{ matrix.python-version }} and ${{ matrix.backend }} ${{ matrix.backend-version }}
      uses: ./.github/actions/env
      with:
        python-version: ${{ matrix.python-version }}
        backend: ${{ matrix.backend }}
        backend-version: ${{ matrix.backend-version }}

    - name: Run CPU tests
      continue-on-error: ${{ inputs.continue-on-error }}
      shell: bash -l {0}
      # TODO: Setup dtype and device fixture as arguments
      # run: pytest -v --device cpu --dtype ${{ inputs.backend-dtype }} ${{ inputs.pytest-extra }} --cov=kornia --cov-report xml ./tests/
      run: KERAS_BACKEND=${{ matrix.backend }} pytest -v ${{ inputs.pytest-extra }} --cov=kornia --cov-report xml ./tests/

    - if: always()
      name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }} # to not depend on build via GH API
        flags: cpu,${{ inputs.os }}_py-${{ matrix.python-version }}_${{ matrix.backend }}-${{ matrix.backend-version }}_${{ inputs.backend-dtype }}
        name: cpu-coverage
