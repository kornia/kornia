name: Tests on CPU (PR)

on:
  push:
    branches: [test-me-*]
  pull_request:
    branches: [master]
    types: [opened, reopened, synchronize, ready_for_review, labeled]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  tests-cpu:
    strategy:
      fail-fast: false  # TODO: enable it when CI be stable (when drop support to torch 1.9.1)
      matrix:
        os: ['Ubuntu-latest', 'Windows-latest', 'MacOS-latest']
    uses: ./.github/workflows/tests.yml
    with:
      os: ${{ matrix.os }}
      python-version: '["3.8", "3.10"]'
      pytorch-version: '["1.9.1", "2.0.1"]'
      pytorch-dtype: 'float32'

  tests-cpu-fp64:
    strategy:
      fail-fast: true
    uses: ./.github/workflows/tests.yml
    with:
      python-version: '["3.8", "3.10"]'
      pytorch-version: '["1.9.1", "2.0.1"]'
      pytorch-dtype: 'float64'

  tests-coverage:
    uses: ./.github/workflows/tests.yml
    with:
      python-version: '["3.10"]'
      pytorch-version: '["2.0.1"]'
      pytorch-dtype: 'float32,float64'
      coverage: true
      continue-on-error: true

  test-typing:
    uses: ./.github/workflows/test_typing.yml

  test-tutorials:
    uses: ./.github/workflows/test_tutorials.yml

  collector:
    needs: [tests-cpu, tests-cpu-fp64, test-tutorials, test-typing, tests-coverage]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: check for failures
      if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: echo job failed && exit 1

  tests-nightly:
    if:  contains(github.event.pull_request.labels.*.name, 'nightly')
    name: ${{ matrix.os }} - torch-nightly, ${{ matrix.pytorch-dtype }}

    strategy:
      fail-fast: false
      matrix:
        os: ['Ubuntu-latest', 'Windows-latest'] #, 'MacOS-latest'] add it when https://github.com/pytorch/pytorch/pull/89262 be merged
        pytorch-dtype: ['float32', 'float64']

    uses: ./.github/workflows/tests.yml
    with:
      os: ${{ matrix.os }}
      pytorch-version: '["nightly"]'
      pytorch-dtype: ${{ matrix.pytorch-dtype }}
