name: tests-cpu

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 4 * * *"

jobs:
  lint_python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: python3 -m pip install flake8
    - run: python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  tests-cpu-os-versions-fast:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
        pytorch-version: [1.9.0]

    steps:
    - uses: actions/checkout@v2
    - name: Setup conda dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda install curl make -c conda-forge
        conda install pytorch=${{ matrix.pytorch-version }} cpuonly -c pytorch
        pip install -r requirements-dev.txt
        make install
    - name: Run Tests
      shell: bash -l {0}
      run: pytest -v --device cpu --dtype float32,float64 --cov=kornia --cov-report xml ./test
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml

  tests-cpu-version-fast:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7]
        pytorch-version: [1.6.0, 1.7.0, 1.7.1, 1.8.0, 1.9.0]

    steps:
    - uses: actions/checkout@v2
    - name: Setup conda dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        conda install curl make -c conda-forge
        conda install pytorch=${{ matrix.pytorch-version }} cpuonly -c pytorch
        pip install -r requirements-dev.txt
        make install
    - name: Run Tests
      shell: bash -l {0}
      run: pytest -v --device cpu --dtype float32,float64 --cov=kornia --cov-report xml ./test
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
