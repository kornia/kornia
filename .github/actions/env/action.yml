name: Environment setup

on:
  workflow_dispatch:
    inputs:
      python-version:
        description: "The python version desired."
        required: true
        default: '3.10'
        type: string

      backend:
        required: true
        default: 'torch'
        type: string

      backend-version:
        required: true
        default: '2.0.1'
        type: string

runs:
  using: "composite"
  steps:
    - name: Setup environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    # - if: ${{ contains(fromJson('["nightly"]'), inputs.pytorch-version ) }}
    #   name: Install PyTorch nightly
    #   shell: bash
    #   run: pip install numpy --pre torch[dynamo] --force-reinstall --extra-index-url https://download.pytorch.org/whl/nightly/cpu/

    # - if: ${{ contains(fromJson('["nightly"]'), inputs.pytorch-version ) == false}}
    - if: ${{ inputs.backend == 'torch' }}
      name: Install pytorch
      shell: bash
      run: pip install torch==${{ inputs.backend-version }} --index-url https://download.pytorch.org/whl/cpu

    - if: ${{ inputs.backend == 'jax' }}
      name: Install jax
      shell: bash
      run: pip install jax[cpu]==${{ inputs.backend-version }}

    - if: ${{ inputs.backend == 'tensorflow' }}
      name: Install TensorFlow
      shell: bash
      run: pip install tensorflow==${{ inputs.backend-version }}

    - name: Install Keras-core
      shell: bash
      # NOTE: In the future, can be possible to only install the specific backend frameworks desired.
      run: pip install keras-core torch jax[cpu] tensorflow numpy

    - name: Install Kornia dev
      shell: bash
      run: pip install .[dev,x]

    # - name: Check dependencies and kornia version
    #   shell: bash
    #   run: |
    #     python -c "import torch;print('Pytorch version: ', torch.__version__)"
    #     python -c "import kornia;print('Kornia version: ', kornia.__version__)"
